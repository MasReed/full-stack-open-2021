{"version":3,"sources":["example/services/notes.js","example/Footer.jsx","example/Note.jsx","example/Notification.jsx","example/App.jsx","index.js"],"names":["baseUrl","noteService","getAll","request","axios","get","nonExisting","id","content","date","important","then","response","data","concat","create","newObject","post","update","put","Footer","style","color","fontStyle","fontSize","Note","note","toggleImportance","label","className","onClick","Notification","message","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMsg","setErrorMsg","useEffect","initialNotes","notesToShow","filter","map","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"6LAGMA,EAAU,aAyBDC,EAFK,CAAEC,OArBP,WACX,IAAMC,EAAUC,IAAMC,IAAIL,GACpBM,EAAc,CAChBC,GAAI,IACJC,QAAS,gCACTC,KAAM,2BACNC,WAAW,GAEf,OAAOP,EAAQQ,MAAM,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAOR,OAa5BS,OAVf,SAAAC,GAEX,OADgBZ,IAAMa,KAAKjB,EAASgB,GACrBL,MAAM,SAAAC,GAAQ,OAAIA,EAASC,SAQRK,OALvB,SAACX,EAAIS,GAEhB,OADgBZ,IAAMe,IAAN,UAAanB,EAAb,YAAwBO,GAAMS,GAC/BL,MAAM,SAAAC,GAAQ,OAAIA,EAASC,U,OCJ/BO,EAjBA,WAQX,OACI,sBAAKC,MAPW,CAChBC,MAAO,QACPC,UAAW,SACXC,SAAU,QAIV,UACI,uBACA,2DCCGC,EAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBAEZC,EAAQF,EAAKhB,UAAY,mBAAqB,iBAEpD,OACI,qBAAImB,UAAU,OAAd,UACKH,EAAKlB,QACN,wBAAQsB,QAASH,EAAjB,SAAoCC,QCMjCG,EAbM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAEpB,OAAKA,EAKD,qBAAKH,UAAU,qBAAf,SACKG,IALE,MCoGAC,EAjGH,WAAM,MAGcC,mBAAS,IAHvB,mBAGNC,EAHM,KAGCC,EAHD,OAIkBF,mBAAS,iBAJ3B,mBAING,EAJM,KAIGC,EAJH,OAKkBJ,oBAAS,GAL3B,mBAKNK,EALM,KAKGC,EALH,OAMoBN,mBAAS,MAN7B,mBAMNO,EANM,KAMIC,EANJ,KAUdC,qBAAW,WACP1C,EACKC,SACAS,MAAM,SAAAiC,GACHR,EAASQ,QAElB,IAGH,IAuBMC,EAAcN,EACdJ,EACAA,EAAMW,QAAQ,SAAApB,GAAI,OAAIA,EAAKhB,aA0BjC,OACI,gCACI,uCACA,cAAC,EAAD,CAAcsB,QAASS,IACvB,8BACI,yBAAQX,QAAU,kBAAMU,GAAYD,IAApC,kBACUA,EAAU,YAAc,WAGtC,6BACKM,EAAYE,KAAK,SAAArB,GAAI,OAClB,cAAC,EAAD,CAEIA,KAAMA,EACNC,iBAAmB,kBApCZ,SAACpB,GACxB,IAAMmB,EAAOS,EAAMa,MAAM,SAAAC,GAAC,OAAIA,EAAE1C,KAAOA,KACjC2C,EAAW,2BAAQxB,GAAR,IAAchB,WAAYgB,EAAKhB,YAEhDT,EACKiB,OAAOX,EAAI2C,GACXvC,MAAM,SAAAwC,GACHf,EAASD,EAAMY,KAAK,SAAArB,GAAI,OAAIA,EAAKnB,KAAOA,EAAKmB,EAAOyB,SAEvDC,OAAO,SAAAC,GACJX,EAAY,SAAD,OACEhB,EAAKlB,QADP,oCAGX8C,YAAY,WACRZ,EAAY,QACb,QAqB8Ba,CAAmB7B,EAAKnB,MAF5CmB,EAAKnB,SAMtB,uBAAMiD,SArEE,SAACC,GACbA,EAAMC,iBACN,IAAMC,EAAa,CACfnD,QAAS6B,EACT5B,MAAM,IAAImD,MAAOC,cACjBnD,UAAWoD,KAAKC,SAAW,IAG/B9D,EACKc,OAAO4C,GACPhD,MAAM,SAAAwC,GACHf,EAASD,EAAMrB,OAAOqC,IACtBb,EAAW,QAyDf,UACI,uBAAO0B,MAAO3B,EAAS4B,SApDV,SAACR,GACtBnB,EAAWmB,EAAMS,OAAOF,UAoDhB,wBAAQG,KAAK,SAAb,qBAEJ,cAAC,EAAD,QCzFZC,IAASC,OACP,mCACA,cAAC,EAAD,MAEAC,SAASC,eAAe,W","file":"static/js/main.51cfe458.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n// const baseUrl = 'https://afternoon-harbor-27708.herokuapp.com/api/notes';\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl);\r\n    const nonExisting = {\r\n        id: 10000,\r\n        content: 'This note not saved to server',\r\n        date: '2019-05-30T17:30:31.098Z',\r\n        important: true,\r\n    }\r\n    return request.then( response => response.data.concat(nonExisting) );\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject);\r\n    return request.then( response => response.data );\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n    return request.then( response => response.data );\r\n}\r\n\r\nconst noteService = { getAll, create, update }\r\n\r\nexport default noteService;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n\r\n    const footerStyle = {\r\n        color: 'green',\r\n        fontStyle: 'italic',\r\n        fontSize: '16px'\r\n    }\r\n\r\n    return (\r\n        <div style={footerStyle}>\r\n            <br />\r\n            <em>Note App Example 2021</em>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n\r\n    const label = note.important ? 'mark unimportant' : 'mark important'\r\n\r\n    return (\r\n        <li className='note'>\r\n            {note.content}\r\n            <button onClick={toggleImportance}>{label}</button>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Note;\r\n","import React from 'react';\r\n\r\nconst Notification = ({ message }) => {\r\n\r\n    if (!message) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className='error-notification'>\r\n            {message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from 'react';\r\nimport noteService from './services/notes.js';\r\n// Components\r\nimport Footer from './Footer.jsx';\r\nimport Note from './Note.jsx';\r\nimport Notification from './Notification.jsx';\r\n\r\n// Main App\r\nconst App = () => {\r\n\r\n    // Stateful Data\r\n    const [ notes, setNotes ] = useState([]);\r\n    const [ newNote, setNewNote ] = useState('a new note...');\r\n    const [ showAll, setShowAll ] = useState(true);\r\n    const [ errorMsg, setErrorMsg ] = useState(null);\r\n\r\n\r\n    // Fetch Data from json-server\r\n    useEffect( () => {\r\n        noteService\r\n            .getAll()\r\n            .then( initialNotes => {\r\n                setNotes(initialNotes)\r\n            });\r\n    }, []);\r\n\r\n    // User saves new note\r\n    const addNote = (event) => {\r\n        event.preventDefault();\r\n        const noteObject = {\r\n            content: newNote,\r\n            date: new Date().toISOString(),\r\n            important: Math.random() < 0.5,\r\n        }\r\n\r\n        noteService\r\n            .create(noteObject)\r\n            .then( returnedNote => {\r\n                setNotes(notes.concat(returnedNote))\r\n                setNewNote('')\r\n                }\r\n            );\r\n    }\r\n\r\n    //\r\n    const handleNoteChange = (event) => {\r\n        setNewNote(event.target.value);\r\n    }\r\n\r\n    // Able to show only important notes\r\n    const notesToShow = showAll\r\n        ? notes\r\n        : notes.filter( note => note.important)\r\n\r\n\r\n    //\r\n    const toggleImportanceOf = (id) => {\r\n        const note = notes.find( n => n.id === id )\r\n        const changedNote = { ...note, important: !note.important }\r\n\r\n        noteService\r\n            .update(id, changedNote)\r\n            .then( returnedNote => {\r\n                setNotes(notes.map( note => note.id !== id ? note : returnedNote))\r\n            })\r\n            .catch( error => {\r\n                setErrorMsg(\r\n                    `Note '${note.content}' does not exist on the server.`\r\n                )\r\n                setTimeout( () => {\r\n                    setErrorMsg(null)\r\n                }, 5000)\r\n                // setNotes(notes.filter( n => n.id !== id ))\r\n            });\r\n    }\r\n\r\n\r\n    // Items to render\r\n    return (\r\n        <div>\r\n            <h1>Notes</h1>\r\n            <Notification message={errorMsg} />\r\n            <div>\r\n                <button onClick={ () => setShowAll(!showAll) }>\r\n                    Show {showAll ? 'important' : 'all'}\r\n                </button>\r\n            </div>\r\n            <ul>\r\n                {notesToShow.map( note =>\r\n                    <Note\r\n                        key={note.id}\r\n                        note={note}\r\n                        toggleImportance={ () => toggleImportanceOf(note.id) }\r\n                    />\r\n                )}\r\n            </ul>\r\n            <form onSubmit={addNote}>\r\n                <input value={newNote} onChange={handleNoteChange}/>\r\n                <button type='submit'>Save</button>\r\n            </form>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css'\n// App components\nimport App0 from './example/App.jsx';\n// import ExercisesApp from './exercise/a/ExercisesApp.jsx';\n// import PhonebookApp from './phonebook/PhonebookApp.jsx';\n// import CountriesApp from './countries/CountriesApp.jsx';\n\n\n// Example\nReactDOM.render(\n  <>\n  <App0 />\n  </>,\n  document.getElementById('root')\n);\n\n// Exercise\n// ReactDOM.render(\n//     <>\n//         <CountriesApp />\n//         <hr />\n//         <App0 />\n//         <hr />\n//         <ExercisesApp />\n//         <hr />\n//         <PhonebookApp />\n//         <hr />\n//     </>,\n//     document.getElementById('root')\n// );\n"],"sourceRoot":""}