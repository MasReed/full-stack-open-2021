{"version":3,"sources":["phonebook/services/contacts.js","phonebook/ErrorBanner.jsx","phonebook/Filter.jsx","phonebook/PersonForm.jsx","phonebook/Person.jsx","phonebook/Persons.jsx","phonebook/SuccessBanner.jsx","phonebook/PhonebookApp.jsx","index.js"],"names":["baseUrl","contactsService","createContact","newContactObject","axios","post","then","response","data","readAllContacts","get","updateContact","updatedContactObject","put","id","deleteContact","delete","ErrorBanner","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","Filter","onChange","value","placeholder","PersonForm","onSubmit","newName","handleNameChange","newNumber","handleNumberChange","type","Person","name","number","onClick","display","marginLeft","Persons","getContacts","contacts","map","person","SuccessBanner","App","useState","persons","setPersons","setNewName","setNewNumber","searchStr","setSearchStr","showAllContacts","setShowAllContacts","successMsg","setSuccessMsg","errorMsg","setErrorMsg","useEffect","match","filter","updatedContact","prevState","prevIndex","indexOf","updatedPersons","setTimeout","catch","error","event","target","preventDefault","contactObject","some","toLowerCase","window","confirm","returnedContact","concat","includes","eventId","parseInt","parentNode","contact","find","returnedData","console","log","ReactDOM","render","PhonebookApp","document","getElementById"],"mappings":"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","file":"static/js/main.e8ff90d9.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst baseUrl = '/api/persons';\r\n\r\nconst createContact = (newContactObject) => {\r\n    const request = axios.post(baseUrl, newContactObject);\r\n    return request.then( response => response.data );\r\n}\r\n\r\nconst readAllContacts = () => {\r\n    const request = axios.get(baseUrl);\r\n    return request.then( response => response.data );\r\n}\r\n\r\nconst updateContact = (updatedContactObject) => {\r\n    const request = axios.put(baseUrl + `/${updatedContactObject.id}`, updatedContactObject)\r\n    return request.then ( response => response.data );\r\n}\r\n\r\nconst deleteContact = (id) => {\r\n    const request = axios.delete(baseUrl + `/${id}`)\r\n    return request.then( response => response.data );\r\n}\r\n\r\nconst contactsService = { createContact, readAllContacts, updateContact, deleteContact };\r\n\r\nexport default contactsService;\r\n","import React from 'react';\r\n\r\nconst ErrorBanner = ({ message }) => {\r\n\r\n    if (!message) {\r\n        return null\r\n    }\r\n\r\n    const errorStyle = {\r\n        color: 'red',\r\n        background: 'lightgrey',\r\n        fontSize: '20px',\r\n        borderStyle: 'solid',\r\n        borderRadius: '5px',\r\n        padding: '10px',\r\n        marginBottom: '10px'\r\n    }\r\n\r\n    return (\r\n        <div style={errorStyle}>\r\n            {message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ErrorBanner;\r\n","import React from 'react';\r\n\r\nconst Filter = ({ onChange, value }) => {\r\n    // Filter contacts for `value` on input change\r\n    return (\r\n        <>\r\n            <div>\r\n                <input\r\n                    placeholder='Search Contacts...'\r\n                    onChange={onChange}\r\n                    value={value}\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\n\r\nconst PersonForm = ({ onSubmit, newName, handleNameChange, newNumber, handleNumberChange }) => {\r\n    // Add a new contact with name and number when submitted\r\n    return (\r\n        <>\r\n            <h2>Add New Contact</h2>\r\n            <form onSubmit={onSubmit}>\r\n                <div>\r\n                    <label>Name: </label>\r\n                    <input value={newName} onChange={handleNameChange}/>\r\n                </div>\r\n                <div>\r\n                    <label>Number: </label>\r\n                    <input value={newNumber} onChange={handleNumberChange}/>\r\n                </div>\r\n                <div>\r\n                    <button type='submit'>Add</button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PersonForm;\r\n","import React from 'react';\r\n\r\nconst Person = ({ id, name, number, onClick }) => {\r\n    return (\r\n        <div key={id} id={id} style={{padding: '5px'}}>\r\n            <p style={{display: 'inline'}}>{name}: #{number}</p>\r\n            <button onClick={onClick} style={{display: 'inline', marginLeft: '10px'}}>Delete</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Person;\r\n","import React from 'react';\r\nimport Person from './Person.jsx';\r\n\r\nconst Persons = ({ getContacts, onClick }) => {\r\n    // Display contact name and number from list of contacts\r\n\r\n    const contacts = getContacts();\r\n\r\n    return (\r\n        <>\r\n            <h2>Contacts</h2>\r\n            { contacts.map( person => person\r\n                ? <Person\r\n                    key={person.id}\r\n                    id={person.id}\r\n                    name={person.name}\r\n                    number={person.number}\r\n                    onClick={onClick}\r\n                  />\r\n                : null)\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Persons;\r\n","import React from 'react';\r\n\r\nconst SuccessBanner = ({ message }) => {\r\n\r\n    if (!message) {\r\n        return null\r\n    }\r\n\r\n    const successStyle = {\r\n        color: 'green',\r\n        background: 'lightgrey',\r\n        fontSize: '20px',\r\n        borderStyle: 'solid',\r\n        borderRadius: '5px',\r\n        padding: '10px',\r\n        marginBottom: '10px'\r\n    }\r\n\r\n    return (\r\n        <div style={successStyle}>\r\n            {message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SuccessBanner;\r\n","import React, { useState, useEffect } from 'react';\r\nimport contactsService from './services/contacts.js';\r\nimport ErrorBanner from './ErrorBanner.jsx';\r\nimport Filter from './Filter.jsx';\r\nimport PersonForm from './PersonForm.jsx';\r\nimport Persons from './Persons.jsx';\r\nimport SuccessBanner from './SuccessBanner.jsx';\r\n\r\nconst App = () => {\r\n\r\n    // All contacts\r\n    const [ persons, setPersons ] = useState([]);\r\n\r\n    // New contact info\r\n    const [ newName, setNewName ] = useState('');\r\n    const [ newNumber, setNewNumber ] = useState('');\r\n\r\n    // Display of contacts from search filter\r\n    const [ searchStr, setSearchStr ] = useState('');\r\n    const [ showAllContacts, setShowAllContacts ] = useState(true);\r\n\r\n    // Messages\r\n    const [ successMsg, setSuccessMsg ] = useState(null);\r\n    const [ errorMsg, setErrorMsg ] = useState(null);\r\n\r\n\r\n    // Fetch Data from json-server\r\n    useEffect( () => {\r\n        contactsService\r\n            .readAllContacts()\r\n            .then( response => setPersons(response))\r\n        }, []);\r\n\r\n\r\n    // Add contact info from input\r\n    const addContact = (event) => {\r\n        // Don't reload page on submit\r\n        event.preventDefault();\r\n\r\n        const contactObject = {\r\n            name: newName,\r\n            number: newNumber\r\n        }\r\n\r\n        // Checks if entry already exists\r\n        if (persons.some( person => person.name.toLowerCase() === newName.toLowerCase() )) {\r\n            const affirm = window.confirm(\r\n                `\\n'${newName}' is already a contact.\r\n                \\nReplace the previous number with: ${newNumber}?`\r\n            )\r\n            // Update contact number\r\n            if (affirm) {\r\n                updateContact(contactObject);\r\n            }\r\n        } else {\r\n            // Server Communication\r\n            contactsService\r\n                .createContact(contactObject)\r\n                .then( returnedContact => {\r\n                    setPersons(persons.concat(returnedContact))\r\n                    // toast success banner\r\n                    setSuccessMsg(\r\n                        `'${contactObject.name}' successfully added!`\r\n                    );\r\n                    setTimeout( () => {\r\n                        setSuccessMsg(null)\r\n                    }, 5000)\r\n                });\r\n\r\n\r\n        }\r\n\r\n        // Reset input fields\r\n        setNewName('');\r\n        setNewNumber('');\r\n    }\r\n\r\n\r\n    // Update contact number\r\n    const updateContact = ({ name, number }) => {\r\n\r\n        const match = persons.filter( person => person.name === name)[0]\r\n        const id = match.id;\r\n        const updatedContact = {\r\n            name: name,\r\n            number: number,\r\n            id: id\r\n        }\r\n\r\n        // Update on server\r\n        contactsService\r\n            .updateContact(updatedContact)\r\n            .then( response => {\r\n                setPersons( prevState => {\r\n                    const prevIndex = prevState.indexOf(match);\r\n                    let updatedPersons = [...prevState];\r\n                    updatedPersons[prevIndex] = response;\r\n\r\n                    return updatedPersons\r\n                })\r\n\r\n                // Toast success banner\r\n                setSuccessMsg(\r\n                    `'${name}' successfully updated!`\r\n                );\r\n                setTimeout( () => {\r\n                    setSuccessMsg(null)\r\n                }, 5000)\r\n            })\r\n            .catch( error => {\r\n                setErrorMsg(\r\n                    `'${updatedContact.name}' cannot be found.`\r\n                )\r\n                setTimeout( () => {\r\n                    setErrorMsg(null)\r\n                }, 5000)\r\n            });\r\n\r\n        // Reset input fields\r\n        setNewName('');\r\n        setNewNumber('');\r\n    }\r\n\r\n\r\n    // Delete Contact from list\r\n    const deleteContact = (event) => {\r\n        const eventId = parseInt(event.target.parentNode.id);\r\n        const contact = persons.find( person => person.id === eventId );\r\n        const isConfirmed = window.confirm(`Delete contact '${contact.name}' ?`);\r\n\r\n        if (isConfirmed) {\r\n            contactsService\r\n                .deleteContact(eventId)\r\n                .then( returnedData => {\r\n                    setPersons(persons.filter( person => person.id !== eventId ))\r\n                })\r\n                .catch( error => {\r\n                    console.log(error)\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    // Filter list of contacts to show\r\n    const contactsToDisplay = () => {\r\n\r\n        const contactsSet = showAllContacts\r\n            ? persons\r\n            : persons.filter( person =>\r\n                person.name.toLowerCase().includes(\r\n                    searchStr.toLowerCase()\r\n                ) === true\r\n              )\r\n        return contactsSet;\r\n    }\r\n\r\n    // When Name input is changed\r\n    const handleNameChange = (event) => {\r\n        setNewName(event.target.value);\r\n    }\r\n\r\n    // When Number input is changed\r\n    const handleNumberChange = (event) => {\r\n        setNewNumber(event.target.value);\r\n    }\r\n\r\n    // When Search input is changed\r\n    const handleSearchChange = (event) => {\r\n        setShowAllContacts(false);\r\n        setSearchStr(event.target.value);\r\n    }\r\n\r\n\r\n    // Elements to render\r\n    return (\r\n        <>\r\n            <h1>Phonebook</h1>\r\n\r\n            <SuccessBanner message={successMsg} />\r\n            <ErrorBanner message={errorMsg} />\r\n\r\n            <Filter\r\n                onChange={handleSearchChange}\r\n                value={searchStr}\r\n            />\r\n\r\n            <PersonForm\r\n                onSubmit={addContact}\r\n                newName={newName}\r\n                handleNameChange={handleNameChange}\r\n                newNumber={newNumber}\r\n                handleNumberChange={handleNumberChange}\r\n            />\r\n\r\n            <Persons\r\n                getContacts={contactsToDisplay}\r\n                onClick={deleteContact}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles.css'\r\n// App components\r\n// import App0 from './example/App.jsx';\r\n// import ExercisesApp from './exercise/a/ExercisesApp.jsx';\r\nimport PhonebookApp from './phonebook/PhonebookApp.jsx';\r\n// import CountriesApp from './countries/CountriesApp.jsx';\r\n\r\n\r\n// Example\r\nReactDOM.render(\r\n  <>\r\n  <PhonebookApp />\r\n  </>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// Exercise\r\n// ReactDOM.render(\r\n//     <>\r\n//         <CountriesApp />\r\n//         <hr />\r\n//         <App0 />\r\n//         <hr />\r\n//         <ExercisesApp />\r\n//         <hr />\r\n//         <PhonebookApp />\r\n//         <hr />\r\n//     </>,\r\n//     document.getElementById('root')\r\n// );\r\n"],"sourceRoot":""}